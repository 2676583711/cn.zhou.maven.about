		
		junit 的maven 坐标:
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.4.0-M1</version>
			<scope>test</scope>
		</dependency>
		
		
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>
*******************************************************************************************
	tomcat的maven 坐标:
		
		<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat</artifactId>
			<version>9.0.0.M1</version>
			<type>pom</type>
		</dependency>	
*********************************************************************************************	
		
设置maven的jdk版本为1.8(jdk8):
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>utf-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

		
	导入struts2的核心包，以及相关的依赖包 (包含传递依赖)

		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>2.5.16</version>
		</dependency>


	导入struts2与spring的整合包，以及相关的依赖包 (包含传递依赖)

		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>2.5.16</version>
		</dependency>




	导入spring的核心包，以及相关的依赖包 (包含传递依赖)
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.3.13.RELEASE</version>
		</dependency>
		
这个标签可以去除传递依赖

		<dependency>
		  <exclusions> 
			<exclusion> 
				<groupId></groupId>
				<artifactId></artifactId>
			</excluision>
		  </exclusions> 
		<dependency>


	导入hibernate的核心包，以及相关的依赖包 (包含传递依赖)
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.16.Final</version>
		</dependency>



	导入c3p0的核心包，以及相关的依赖包 (包含传递依赖)
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>





	导入springmvc的核心包，以及相关的依赖包 (包含传递依赖)

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.13.RELEASE</version>
		</dependency>



	导入mybatis的核心包，以及相关的依赖包 (包含传递依赖)
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>

	导入mybatis与spring的整合包，以及相关的依赖包 (包含传递依赖)

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.2</version>
		</dependency>



	导入jnuit的核心包，以及相关的依赖包 (包含传递依赖)
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.0.0</version>
		</dependency>


		<!--页面跳转 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>



		<!-- 配合application.properties支持jsp页面跳转 -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		然后在src/main/resources目录下新建一个application.properties文件，内容如下

# 页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
# 响应页面默认后缀
spring.mvc.view.suffix=.jsp

然后就可以写一个controller，在webapp/WEB-INF/jsp/下面放上写的页面文件就可以实现跳转了














